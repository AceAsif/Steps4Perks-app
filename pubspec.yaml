name: myapp
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.8.0-278.1.beta

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8

  #------ Adding extra library  ------
  # Flutter Gauges library - Asif added it
  # The Flutter Gauges library includes the data visualization widgets 
  # Linear Gauge and Radial Gauge (a.k.a. circular gauge) to create modern, interactive, animated gauges.
  syncfusion_flutter_gauges: ^30.1.37
  # FL Chart is a highly customizable Flutter chart library 
  # that supports Line Chart, Bar Chart, Pie Chart, Scatter Chart, and Radar Chart. 
  fl_chart: ^1.0.0
  # This plugin allows for continuous step counting and pedestrian status 
  # using the built-in pedometer sensor API of iOS and Android devices.
  pedometer: ^4.1.1
  # This plugin provides a cross-platform (iOS, Android) API to request permissions and check their status. 
  # You can also open the device's app settings so users can grant permission.
  # On Android, you can show a rationale for requesting permission.
  permission_handler: ^12.0.0+1
  # The provider library in Flutter is a lightweight and flexible state management solution.
  # A wrapper around InheritedWidget to make them easier to use and more reusable.
  provider: ^6.1.5
  # shared_preferences is a Flutter plugin that provides persistent storage for 
  # simple data — like saving key–value pairs (e.g., settings, counters, flags) on the device locally.
  shared_preferences: ^2.5.3
  # The intl package in Flutter/Dart is used for internationalisation and 
  # localisation (i18n/l10n) — making your app ready for multiple languages, regions, and formats like dates, numbers, and currencies.
  intl: ^0.20.2
  # The flutter_local_notifications plugin allows you to display notifications 
  # on the device locally, even when your app is in the background or closed.
  flutter_local_notifications: ^19.3.0
  # Provides accurate and efficient time zone conversions and handling.
  timezone: ^0.10.1
  #TODO: Future feature
  # This plugin provides unified access to health and fitness data 
  # from platforms like Apple HealthKit and Android Google Fit.
  #health: ^13.1.1
  # A Flutter plugin for accessing device information.
  device_info_plus: ^11.5.0
  # These are the Firebase database plugins
  firebase_core: ^2.24.0
  firebase_auth: ^4.14.0
  firebase_storage: ^11.6.5
  image_picker: ^1.1.2
  cloud_firestore: ^4.13.1
  firebase_messaging: ^14.7.4
  # This plugin enables Flutter applications to display ads from Google AdMob.
  #google_mobile_ads: ^6.0.0
  # shimmer is a Flutter package that provides a customizable shimmer effect widget, commonly used as a loading indicator for content.
  shimmer: ^3.0.0
  # A flutter library to show images from the internet and keep them in the cache directory.
  cached_network_image: ^3.4.1
  flutter_timezone: ^4.1.1


dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
 
  flutter_slidable: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
   - assets/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
